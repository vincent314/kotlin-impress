- var currentX= -2800, currentY = -2800;
- function move(x,y){currentX += x; currentY += y;}

#title.step(data-x='1000', data-y='1000', data-scale='10')
    img#logo(src="assets/kotlin-logo.png")
    h1 Kotlin
    p
        a http://bit.ly/kotlin-fr
    p
        i.fa.fa-github(aria-hidden="true") &nbsp;
        a https://github.com/vincent314/kotlin-demo

#introduction1.step(data-x=currentX, data-y=currentY, data-scale='3')
    p Créé en 2011 par une équipe de <u>Jetbrains</u> à St Petersbourg

- move(0, 600)
#introduction2.step(data-x=currentX, data-y=currentY, data-scale='3')
    p
        em "Statically typed programming language for the <u>JVM</u>, <u>Android</u> and the <u>browser</u>"

- move(0, 800)
#introduction3.step(data-x=currentX, data-y=currentY, data-scale='3')
    h1 E = mc²

- move(0, 500)
#introduction4.step(data-x=currentX, data-y=currentY, data-scale='3')
    h1 Error = more_code²

- move(2500,-1000)
#jvm.step(data-x=currentX, data-y=currentY, data-scale='2')
    h1 Language de la JVM
    ul
        li JRE 6+ (Android !)
        li Java, Groovy, Scala…
        li intégration parfaite
            span.cf Spring, Maven, Gradle…
        li IDE support (IntelliJ, Android Studio 3 …)
        li Transpilation Javascript
        li Compilation <u>native</u>
            span.cf experimental ! MacOS, iOS, Ubuntu & Pi

- move(1800, 0)
#situation.step(data-x=currentX, data-y=currentY, data-scale='2')
    h1 Situation
    ul
        li développement très actif
        li version actuelle
            strong 1.1.3
        li quelques fonctions expérimentales
            span.cf coroutines
        li <em>first class language</em> pour Android

- move(1800, 0)
#features.step(data-x=currentX, data-y=currentY, data-scale='1')
    h1 Features
    ul
        li Nouvelle syntaxe étendue et concise
        li Nouveaux idioms et paradigmes de programmation
            span.cf cf. Javascript, Scala, Ruby…
        li Gestion des null
        li ~Java8 très outillé
            span.cf lombok, Javaslang
        li Domain Specific Language (DSL)

- move(1800, 0)
#features2.step(data-x=currentX, data-y=currentY, data-scale='1')
    h1 Features
    ul
        li val/var
        li data classes
        li paramètres nommés
        li when
            span.cf switch/case
        li extension functions & infix
        li null, ?., !!. & ?:
        li lambda


- move(0, 550)
#features3.step(data-x=currentX, data-y=currentY, data-scale='1')
    ul
        li destructuration
        li classes et héritage
            span.cf open / sealed
        li objects
        li companion objects
        li lazy evaluation
        li sequences
        li coroutines et async.
            span.cf EXPERIMENTAL



- move(1800, -700)
#resource.step(data-x=currentX, data-y=currentY, data-scale='2')
    h1 Resources
    ul
        li
            a(href="http://kotlinlang.org/docs/reference/", target="_blank")
                i.fa.fa-book &nbsp;
                span Documentation
        li
            a(href="https://try.kotlinlang.org/#/Kotlin%20Koans", target="_blank")
                i.fa.fa-terminal &nbsp;
                span Try KOANS
        li
            a(href="https://kotlin.link/", target="_blank")
                i.fa.fa-link &nbsp;
                span Liens
        li
            a(href="https://www.youtube.com/watch?v=X1RVYt2QKQE", target="_blank")
                i.fa.fa-youtube-play &nbsp;
                span Présentation @ Google I/O 2017

- currentX = 4000; currentY = 4000
#hello-world.step(data-x=currentX, data-y=currentY, data-scale='2', data-rotate-z=180)
    h1 Hello !
    pre
        code.kotlin.
            fun main(args: Array&lt;String>) {
                println("Hello Kotlin")
            }

- move(-1800, 0)
#val-var.step(data-x=currentX, data-y=currentY, data-scale='2', data-rotate-z=180)
    h1 var vs val

    h3 Java
    pre
        code.java.
            final int value = 1;
            int variable = 1;
            // forbidden : value = 2;
            variable = 2;

    h3 Kotlin
    pre
        code.kotlin.
            val value = 1
            var variable = 1
            // forbidden : value = 2
            variable = 2

- move(-2400,0)
#data-class.step(data-x=currentX, data-y=currentY, data-scale='2',data-rotate-z=180)
    h1 Data class

    h3 Java
    pre
        code.java.
            public class JavaUser {
                    private String firstname;
                    private String lastname;
                    // Getters and Setters …
            }

            JavaUser javaUser = new JavaUser("John", "DOE");
            System.out.println("Hello, " + javaUser.getFirstname() + " "
                  + javaUser.getLastname()); // Hello, John DOE

    h3 Kotlin
    pre
        code.kotlin.
            data class User(var firstname:String, var lastname:String)

            val (firstname, lastname) = User(firstname = "John", lastname = "DOE")
            println("Hello, $firstname $lastname") // Hello, John DOE

#overview.step(data-x='3000', data-y='1500', data-scale='10')